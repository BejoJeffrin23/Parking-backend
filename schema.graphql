type Query {
  getOneImageSlider(id: ID!): ImageSlider
  getOneImageSliderBySlug(slug: String!, userId: String!): ImageSlider
  getAllImageSliders: [ImageSlider]

  getOneRoom(id: ID!): Room
  getOneRoomBySlug(slug: String!, userId: String!): Room
  getAllRooms: [Room]

  getOneForm(id: ID!): Form
  getOneFormBySlug(slug: String!, userId: String!): Form
  getAllForms: [Form]

  getOneFormSub(id: ID!): FormSub
  getAllFormSubsByFormId(formId: String!): [FormSub]
  getAllFormSubs: [FormSub]

  getAllImages: [ImageUpload]
  getDemo: [Book]
  getAllEmails: [ScrapedEmail]

  getAllTeams: [Menu]
  getOneTeam(id: ID!): Menu

  getAllIvdrips: [Menu]
  getOneIvdrip(id: ID!): Menu

  getAllTherapies: [Menu]
  getOneTherapie(id: ID!): Menu

  getAllServices: [Menu]
  getOneService(id: ID!): Menu
}

type Mutation {
  createOneImageSlider(
    userId: String!
    title: String!

    slug: String!
    images: [String]
  ): ImageSlider
  updateOneImageSlider(
    id: ID!
    title: String
    slug: String
    images: [String]
    published: Boolean
  ): ImageSlider
  deleteOneImageSlider(id: ID!): String

  createOneForm(
    userId: String!
    title: String!
    slug: String!
    formJSON: String!
  ): Form
  updateOneForm(
    id: ID!
    title: String
    slug: String
    formJSON: String
    published: Boolean
  ): Form
  deleteOneForm(id: ID!): String

  createOneFormSub(
    formId: String!
    formSlug: String!
    data: String!
    submitedBy: String!
  ): FormSub

  updateOneFormSub(
    id: ID!
    formId: String
    formSlug: String
    data: String
  ): FormSub

  deleteOneFormSub(id: ID!): String

  createOneRoom(
    userId: String!
    title: String!
    description: String!
    slug: String!
    price: Int!
    images: [RoomImagesInput]
    youtube: [String]
  ): Room
  updateOneRoom(
    id: ID!
    title: String
    description: String
    slug: String
    price: Int
    images: [RoomImagesInput]
    youtube: [String]
    published: Boolean
  ): Room
  deleteOneRoom(id: ID!): String

  uploadImage(title: String, imageUrl: String): ImageUpload
  createOneEmail(businessName: String, emails: [String]): ScrapedEmail
  createEmailTemplate(
    templateName: String
    body: String
    subject: String
  ): String
  sendTemplateEmail(
    userId: String!
    templateName: String!
    businessName: String!
    emails: [String]
  ): TemplateEmail
  sendEmail(
    userId: String!
    emails: [String]
    subject: String!
    message: String!
  ): Email
  createOneTeam(slug: String!, title: String!, description: String!): Menu
  updateOneTeam(id: ID!, slug: String, title: String, description: String): Menu
  deleteOneTeam(id: ID!): String

  createOneService(slug: String!, title: String!, description: String!): Menu
  updateOneService(
    id: ID!
    slug: String
    title: String
    description: String
  ): Menu
  deleteOneService(id: ID!): String

  createOneTherapie(slug: String!, title: String!, description: String!): Menu
  updateOneTherapie(
    id: ID!
    slug: String
    title: String
    description: String
  ): Menu
  deleteOneTherapie(id: ID!): String

  createOneIvdrip(slug: String!, title: String!, description: String!): Menu
  updateOneIvdrip(
    id: ID!
    slug: String
    title: String
    description: String
  ): Menu
  deleteOneIvdrip(id: ID!): String
}

type Subscription {
  uploadedImage: ImageUpload @aws_subscribe(mutations: ["uploadImage"])
}

type Email {
  _id: ID!
  userId: String!
  emails: [String]
  subject: String!
  message: String!
}

type TemplateEmail {
  _id: ID!
  userId: String!
  businessName: String!
  emails: [String]
  templateName: String!
}

type ScrapedEmail {
  _id: ID!
  businessName: String!
  emails: [String]
}

type ImageUpload {
  _id: ID!
  title: String
  imageUrl: String
}

type Menu {
  _id: ID!
  slug: String!
  title: String!
  description: String!
}

type Book {
  id: ID!
  title: String
}

type Room {
  _id: ID!
  userId: String!
  title: String!
  description: String!
  slug: String!
  price: Int!
  images: [RoomImages]
  youtube: [String]
  published: Boolean!
}

type RoomImages {
  original: String
  thumbnail: String
}

input RoomImagesInput {
  original: String
  thumbnail: String
}

type ImageSlider {
  _id: ID!
  userId: String!
  title: String!
  slug: String!
  images: [String]
  published: Boolean!
}

type Form {
  _id: ID!
  userId: String!
  title: String!
  formJSON: String!
  slug: String!
  published: Boolean!
}

type FormSub {
  _id: ID!
  formId: String!
  formSlug: String!
  data: String!
  submitedBy: String!
  submitedAt: String
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
